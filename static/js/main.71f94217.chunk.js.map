{"version":3,"sources":["gql/queries.ts","utils/index.ts","components/Users.tsx","components/UserSignUp.tsx","assets/icon-rock.svg","assets/icon-paper.svg","assets/icon-scissors.svg","components/GameChild.tsx","components/Game.tsx","components/MyGames.tsx","components/Navbar.tsx","components/Invites.tsx","components/Routes.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["GET_USERS","gql","REGISTER","LOGIN_USER","ADD_GAME","GET_GAME","GAME_SUB","GIVE_A_MOVE","GET_GAMES","GET_USER_GAMES","winFunc","move1","move2","PATH","showError","e","console","log","mapWInToColor","mov","FlexContainer","styled","div","FlexItem","Head","props","lp","Button","primary","Card","Users","history","useHistory","id","Number","localStorage","getItem","useMutation","update","_","data","insert_game_one","push","onError","addGame","useQuery","variables","fetchPolicy","loading","error","startGame","user_id_2","a","user_id_1","user","length","map","item","username","onClick","Input","input","Content","h2","ErrorBlock","span","UserSignUp","window","location","reload","useState","setError","setUsername","password","setPassword","setLoad","addLocalStorage","auth_token","setItem","register","token","addUser","login","loginUser","signInUser","toString","disabled","type","placeholder","value","onChange","target","required","MoveHead","ImgButton","img","WinnerHead","mapValuesToImg","ROCK_IMG","PAPER_IMG","SCISSOR_IMG","GameChild","addMove","user_id","game_by_pk","move_1","move_2","userByUserId2","submitMove","move","myMove","oppMove","alt","src","Game","match","useRouteMatch","params","subscribeToMore","result","document","updateQuery","prev","subscriptionData","Object","assign","ContentCard","Table","Td","MyGames","user_by_pk","games","style","width","gamesByUserId2","Header","Nav","NavMenu","isClicked","NavItem","NavLink","Link","NavLogo","NavIcon","Navbar","children","setClicked","to","clear","className","Invites","game","Routes","RedirectToLogin","Component","component","rest","render","RedirectToHome","exact","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","require","config","getToken","webLink","WebSocketLink","uri","process","options","reconnect","connectionParams","headers","Authorization","client","ApolloClient","link","cache","InMemoryCache","ReactDOM","StrictMode","ApolloProvider","getElementById"],"mappings":"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","file":"static/js/main.71f94217.chunk.js","sourcesContent":["import { gql } from \"@apollo/client\";\r\n\r\nexport const GET_USERS = gql`\r\n  query GetUsers($id: Int!) {\r\n    user(where: { id: { _neq: $id } }) {\r\n      id\r\n      username\r\n    }\r\n  }\r\n`;\r\n\r\nexport const REGISTER = gql`\r\nmutation ($username: String!, $password: String!) {\r\n  register(username: $username, password: $password){\r\n    token\r\n    id\r\n    username\r\n  }\r\n}\r\n`;\r\n\r\nexport const LOGIN_USER = gql`\r\n  mutation ($username: String!, $password: String!) {\r\n    login(username: $username, password: $password){\r\n      token\r\n      id\r\n      username\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ADD_GAME = gql`\r\n  mutation ($user_id_1: Int!, $user_id_2: Int!) {\r\n    insert_game_one(object: { user_id_1: $user_id_1, user_id_2: $user_id_2 }) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_GAME = gql`\r\n  query GetGame($id: Int!) {\r\n    game_by_pk(id: $id) {\r\n      id\r\n      move_1\r\n      move_2\r\n      user {\r\n        id\r\n        username\r\n      }\r\n      userByUserId2 {\r\n        id\r\n        username\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GAME_SUB = gql`\r\n  subscription GetGameSub($id: Int!) {\r\n    game_by_pk(id: $id) {\r\n      id\r\n      move_1\r\n      move_2\r\n      user {\r\n        id\r\n        username\r\n      }\r\n      userByUserId2 {\r\n        id\r\n        username\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GIVE_A_MOVE = gql`\r\n  mutation ($id: Int!, $input: game_set_input) {\r\n    update_game(where: { id: { _eq: $id } }, _set: $input) {\r\n      returning {\r\n        id\r\n        move_1\r\n        move_2\r\n        user {\r\n          id\r\n          username\r\n        }\r\n        userByUserId2 {\r\n          id\r\n          username\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_GAMES = gql`\r\n  query GetGames($id: Int!) {\r\n    user_by_pk(id: $id) {\r\n      games {\r\n        id\r\n        move_1\r\n        move_2\r\n        userByUserId2 {\r\n          username\r\n        }\r\n      }\r\n      gamesByUserId2 {\r\n        id\r\n        move_1\r\n        move_2\r\n        user {\r\n          username\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_USER_GAMES = gql`\r\nquery GetUserGames($id: Int) {\r\n  game(where: {move_2: {_is_null: true}, user_id_2: {_eq: $id}}) {\r\n    id\r\n    user {\r\n      username\r\n    }\r\n  }\r\n}\r\n\r\n`","export const winFunc = (move1: string, move2: string) => {\r\n  if (move1 === move2) return \"Match Draw\";\r\n  if (\r\n    (move1 === \"P\" && move2 === \"R\") ||\r\n    (move1 === \"R\" && move2 === \"S\") ||\r\n    (move1 === \"S\" && move2 === \"P\")\r\n  ) {\r\n    return \"You Won\";\r\n  } else return \"Opponent Won\";\r\n};\r\n\r\nexport const PATH: any = \"/uplara-client\";\r\n\r\nexport const showError = (e: any) => console.log(e);\r\n\r\nexport const mapValues = (mov: any) => {\r\n  switch (mov) {\r\n    case \"R\":\r\n      return \"Rocks\";\r\n    case \"P\":\r\n      return \"Paper\";\r\n    case \"S\":\r\n      return \"Scissors\";\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n\r\nexport const logout = () => {\r\n  localStorage.clear();\r\n  window.location.reload();\r\n};\r\n\r\nexport const mapWInToColor = (mov: any) => {\r\n  switch (mov) {\r\n    case \"You Won\":\r\n      return \"green\";\r\n    case \"Opponent Won\":\r\n      return \"Red\";\r\n    case \"Match Draw\":\r\n      return \"palevioletred\";\r\n    default:\r\n      return \"#bbb\";\r\n  }\r\n};\r\n","import { useMutation, useQuery } from \"@apollo/client\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nimport { GET_USERS, ADD_GAME } from \"../gql/queries\";\r\nimport { PATH, showError } from \"../utils\";\r\n\r\nconst FlexContainer = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst FlexItem = styled(\"div\")<{ size?: any }>`\r\n  text-align: center;\r\n  background-color: white;\r\n  margin: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 12px 44px;\r\n  align-items: center;\r\n  box-shadow: 1px 1px 1px rgba(0, 0, 0, 0.65);\r\n  justify-content: center;\r\n`;\r\n\r\nconst Head = styled(\"span\")<{ lp?: number }>`\r\n  letter-spacing: ${(props) => (props.lp ? props.lp : 1)}px;\r\n  padding-top: 10px;\r\n  text-align: center;\r\n  font-size: 18px;\r\n`;\r\n\r\nconst Button = styled(\"button\")<{ primary?: boolean }>`\r\n  cursor: pointer;\r\n  background-color: ${(props) => (props.primary ? \"#1e88e5\" : \"palevioletred\")};\r\n  font-size: 16px;\r\n  border-radius: 3px;\r\n  color: white;\r\n  width: 80px;\r\n  border: ${(props) =>\r\n    props.primary ? \"2px solid #1e88e5\" : \"2px solid palevioletred\"};\r\n  padding: 5px 8px;\r\n  transition: 0.5s all ease-out;\r\n  margin: 20px 0;\r\n  border-radius: 3%;\r\n  box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.65);\r\n\r\n  &:hover {\r\n    color: ${(props) => (props.primary ? \"#1e88e5\" : \"palevioletred\")};\r\n    background: transparent;\r\n  }\r\n`;\r\n\r\nconst Card = styled.div`\r\n  padding: 40px;\r\n  background: white;\r\n  text-align: center;\r\n  font-size: 20px;\r\n  margin-top: 50px;\r\n  max-width: 800px;\r\n  box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.65);\r\n`;\r\n\r\nconst Users = () => {\r\n  const history = useHistory();\r\n\r\n  const id: number = Number(localStorage.getItem(\"user_id\"));\r\n\r\n  const onUpdate = (\r\n    _: any,\r\n    {\r\n      data: {\r\n        insert_game_one: { id },\r\n      },\r\n    }: any\r\n  ) => {\r\n    history.push(`${PATH}/game/${id}`);\r\n  };\r\n\r\n  const [addGame] = useMutation(ADD_GAME, {\r\n    update: onUpdate,\r\n    onError: showError,\r\n  });\r\n\r\n  const { loading, error, data } = useQuery(GET_USERS, {\r\n    variables: {\r\n      id,\r\n    },\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div>Error!</div>;\r\n  }\r\n\r\n  const startGame = async (user_id_2: number) => {\r\n    await addGame({ variables: { user_id_1: id, user_id_2 } });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <FlexContainer>\r\n        {data.user.length > 0 ? (\r\n          data.user.map((item: any) => (\r\n            <FlexItem key={item.id}>\r\n              <Head lp={2}>\r\n                <strong>User</strong>\r\n              </Head>\r\n              <Head>{item.username}</Head>\r\n              <Button onClick={() => startGame(item.id)}>Play</Button>\r\n            </FlexItem>\r\n          ))\r\n        ) : (\r\n          <Card>No other users yet.</Card>\r\n        )}\r\n      </FlexContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","import React, { useState } from \"react\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { REGISTER, LOGIN_USER } from \"../gql/queries\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nconst Input = styled.input`\r\n  font-size: 19px;\r\n  border: solid 1px #dbdbdb;\r\n  border-radius: 3px;\r\n  color: #262626;\r\n  padding: 15px 33px;\r\n  border-radius: 3px;\r\n  color: #999;\r\n  cursor: text;\r\n  font-size: 14px;\r\n  font-weight: 300;\r\n  text-align: center;\r\n  background: #fafafa;\r\n  margin-bottom: 22px;\r\n\r\n  &:active,\r\n  &:focus {\r\n    text-align: left;\r\n  }\r\n`;\r\n\r\nconst Card = styled.div`\r\n  background: #fbfbfb;\r\n  border-radius: 8px;\r\n  box-shadow: 1px 2px 8px rgba(0, 0, 0, 0.65);\r\n  margin: 7rem auto 8.1rem auto;\r\n  width: 380px;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  padding: 12px 44px;\r\n  align-items: left;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Head = styled.h2`\r\n  letter-spacing: 4px;\r\n  padding-bottom: 23px;\r\n  padding-top: 10px;\r\n  text-align: center;\r\n`;\r\n\r\nconst Button = styled(\"button\")<{ primary?: boolean }>`\r\n  cursor: pointer;\r\n  background-color: ${(props) => (props.primary ? \"#1e88e5\" : \"palevioletred\")};\r\n  font-size: 16px;\r\n  border-radius: 3px;\r\n  color: white;\r\n  border: ${(props) =>\r\n    props.primary ? \"2px solid #1e88e5\" : \"2px solid palevioletred\"};\r\n  padding: 8px 1em;\r\n  transition: 0.5s all ease-out;\r\n  margin-bottom: 20px;\r\n  border-radius: 3%;\r\n\r\n  &:hover {\r\n    color: ${(props) => (props.primary ? \"#1e88e5\" : \"palevioletred\")};\r\n    background: transparent;\r\n  }\r\n`;\r\n\r\nconst ErrorBlock = styled.span`\r\n  border: 1px solid red;\r\n  padding: 12px 1em;\r\n  margin-bottom: 30px;\r\n  color: red;\r\n  background: #ffe6e6;\r\n`;\r\n\r\nconst UserSignUp = () => {\r\n  const isAuth = localStorage.getItem(\"auth_token\");\r\n\r\n  if (isAuth) {\r\n    window.location.reload();\r\n  }\r\n\r\n  const [error, setError] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [loading, setLoad] = useState(false);\r\n\r\n  const showError = (e: any) => setError(e);\r\n\r\n  const updateStorageRegister = (\r\n    _: any,\r\n    {\r\n      data: {\r\n        register: { id, username, token },\r\n      },\r\n    }: any\r\n  ) => {\r\n    addLocalStorage(id, username, token);\r\n  };\r\n\r\n  const updateStorageLogin = (\r\n    _: any,\r\n    {\r\n      data: {\r\n        login: { id, username, token },\r\n      },\r\n    }: any\r\n  ) => {\r\n    addLocalStorage(id, username, token);\r\n  };\r\n\r\n  const addLocalStorage = (id: any, username: string, auth_token: string) => {\r\n    localStorage.setItem(\"user_id\", id);\r\n    localStorage.setItem(\"username\", username);\r\n    localStorage.setItem(\"auth_token\", auth_token);\r\n    window.location.reload();\r\n  };\r\n\r\n  const [addUser] = useMutation(REGISTER, {\r\n    update: updateStorageRegister,\r\n    onError: showError,\r\n  });\r\n\r\n  const [login] = useMutation(LOGIN_USER, {\r\n    update: updateStorageLogin,\r\n    onError: showError,\r\n  });\r\n\r\n  const loginUser = async () => {\r\n    setLoad(true);\r\n    await login({ variables: { username, password } });\r\n    setUsername(\"\");\r\n    setPassword(\"\");\r\n    setLoad(false);\r\n  };\r\n\r\n  const signInUser = async () => {\r\n    setLoad(true);\r\n    await addUser({ variables: { username, password } });\r\n    setPassword(\"\");\r\n    setUsername(\"\");\r\n    setLoad(false);\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <Content>\r\n        <Head>Rock Paper Scissors Game</Head>\r\n        {error && <ErrorBlock>{error.toString()}</ErrorBlock>}\r\n        <Input\r\n          disabled={loading}\r\n          type=\"text\"\r\n          placeholder=\"Username\"\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n          required\r\n        />\r\n        <Input\r\n          disabled={loading}\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          required\r\n        />\r\n        <Button disabled={loading} onClick={loginUser}>\r\n          Log in\r\n        </Button>\r\n        <Button disabled={loading} onClick={signInUser} primary>\r\n          Sign Up\r\n        </Button>\r\n      </Content>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default UserSignUp;\r\n","export default __webpack_public_path__ + \"static/media/icon-rock.476e90a9.svg\";","export default __webpack_public_path__ + \"static/media/icon-paper.8b57a6b1.svg\";","export default __webpack_public_path__ + \"static/media/icon-scissors.3b1a5d7e.svg\";","import { useMutation } from \"@apollo/client\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { GIVE_A_MOVE } from \"../gql/queries\";\r\nimport { mapWInToColor, PATH, showError, winFunc } from \"../utils\";\r\n\r\nimport ROCK_IMG from \"../assets/icon-rock.svg\";\r\nimport PAPER_IMG from \"../assets/icon-paper.svg\";\r\nimport SCISSOR_IMG from \"../assets/icon-scissors.svg\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nconst Card = styled.div`\r\n  background: #fbfbfb;\r\n  border-radius: 8px;\r\n  box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.65);\r\n  padding: 30px;\r\n  margin-top: 20px;\r\n`;\r\nconst FlexContainer = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n`;\r\n\r\nconst FlexItem = styled(\"div\")<{ size?: any }>`\r\n  text-align: center;\r\n  background-color: white;\r\n  display: flex;\r\n  width: 40%;\r\n  flex-direction: column;\r\n  padding: 12px 44px;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Head = styled.h2`\r\n  font-size: 40px;\r\n  letter-spacing: 4px;\r\n  padding-top: 10px;\r\n  text-align: center;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst MoveHead = styled.h2`\r\n  font-size: 20px;\r\n  padding-top: 10px;\r\n  text-align: center;\r\n  font-weight: 600;\r\n  margin-bottom: 50px;\r\n`;\r\n\r\nconst ImgButton = styled.img`\r\n  cursor: pointer;\r\n  padding-left: 40px;\r\n  padding-right: 40px;\r\n  margin: 5px;\r\n  width: 100px;\r\n`;\r\nconst WinnerHead = styled(\"h2\")<{ type: any }>`\r\n  letter-spacing: 4px;\r\n  text-align: center;\r\n  font-weight: 600;\r\n  padding: 20px 10px;\r\n  width: 300px;\r\n  border: 4px solid ${(props) => mapWInToColor(props.type)};\r\n  color: ${(props) => mapWInToColor(props.type)};\r\n`;\r\n\r\nexport const mapValuesToImg = (mov: string) => {\r\n  switch (mov) {\r\n    case \"R\":\r\n      return ROCK_IMG;\r\n    case \"P\":\r\n      return PAPER_IMG;\r\n    case \"S\":\r\n      return SCISSOR_IMG;\r\n    default:\r\n      return \"\";\r\n  }\r\n};\r\n\r\nconst GameChild = (props: any) => {\r\n  const [addMove] = useMutation(GIVE_A_MOVE, {\r\n    onError: showError,\r\n  });\r\n\r\n  const history = useHistory();\r\n\r\n  const { data, user_id, loading, error } = props;\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n  if (error) {\r\n    return <div>Error!</div>;\r\n  }\r\n\r\n  if (!loading && data && !data.game_by_pk) {\r\n    history.push(PATH);\r\n  }\r\n\r\n  const { id, move_1, move_2, user, userByUserId2 } = data.game_by_pk;\r\n\r\n  if (user.id !== user_id && userByUserId2.id !== user_id) {\r\n    history.push(PATH);\r\n  }\r\n\r\n  const submitMove = async (move: string) => {\r\n    let input: any = {};\r\n    if (user_id === user.id) {\r\n      input.move_1 = move;\r\n    } else {\r\n      input.move_2 = move;\r\n    }\r\n\r\n    await addMove({ variables: { id, input } });\r\n  };\r\n\r\n  const myMove: any = user_id === user.id ? move_1 : move_2;\r\n  const oppMove: any = user_id === user.id ? move_2 : move_1;\r\n\r\n  return (\r\n    <Card>\r\n      <FlexContainer>\r\n        {myMove && oppMove && (\r\n          <WinnerHead type={winFunc(myMove, oppMove)}>\r\n            {winFunc(myMove, oppMove)}!\r\n          </WinnerHead>\r\n        )}\r\n      </FlexContainer>\r\n      <FlexContainer>\r\n        <FlexItem>\r\n          <Head>You</Head>\r\n\r\n          <p>\r\n            {myMove ? (\r\n              <>\r\n                <MoveHead>Your move</MoveHead>\r\n                <ImgButton alt={myMove} src={mapValuesToImg(myMove)} />\r\n              </>\r\n            ) : (\r\n              <>\r\n                <MoveHead>Select your move</MoveHead>\r\n                <ImgButton\r\n                  onClick={() => submitMove(\"R\")}\r\n                  alt=\"Rock\"\r\n                  src={ROCK_IMG}\r\n                />\r\n                <ImgButton\r\n                  onClick={() => submitMove(\"P\")}\r\n                  alt=\"Paper\"\r\n                  src={PAPER_IMG}\r\n                />\r\n                <ImgButton\r\n                  onClick={() => submitMove(\"S\")}\r\n                  alt=\"Scissors\"\r\n                  src={SCISSOR_IMG}\r\n                />\r\n              </>\r\n            )}\r\n          </p>\r\n        </FlexItem>\r\n        <FlexItem>\r\n          <Head>\r\n            {user_id !== user.id ? user.username : userByUserId2.username}\r\n          </Head>\r\n\r\n          <p>\r\n            <MoveHead>Opponent's move</MoveHead>\r\n            {myMove ? (\r\n              (oppMove && (\r\n                <ImgButton alt={oppMove} src={mapValuesToImg(oppMove)} />\r\n              )) ||\r\n              \"Not Yet Given\"\r\n            ) : (\r\n              <>Provide your move first!</>\r\n            )}\r\n          </p>\r\n        </FlexItem>\r\n      </FlexContainer>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default GameChild;\r\n","import { useQuery } from \"@apollo/client\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\n\r\nimport { GAME_SUB, GET_GAME } from \"../gql/queries\";\r\nimport GameChild from \"./GameChild\";\r\n\r\nconst Game = () => {\r\n  const match: any = useRouteMatch();\r\n\r\n  const id: number = Number(match.params.id);\r\n\r\n  const user_id: number = Number(localStorage.getItem(\"user_id\"));\r\n\r\n  const { subscribeToMore, ...result } = useQuery(GET_GAME, {\r\n    variables: {\r\n      id,\r\n    },\r\n  });\r\n\r\n  subscribeToMore({\r\n    document: GAME_SUB,\r\n    variables: {\r\n      id,\r\n    },\r\n    updateQuery: (prev, { subscriptionData }) => {\r\n      if (!subscriptionData.data) return prev;\r\n      const { game_by_pk } = subscriptionData.data;\r\n      return Object.assign({}, prev, {\r\n        game_by_pk,\r\n      });\r\n    },\r\n  });\r\n\r\n  return <GameChild {...result} user_id={user_id} />;\r\n};\r\n\r\nexport default Game;\r\n","import { useQuery } from \"@apollo/client\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { GET_GAMES } from \"../gql/queries\";\r\nimport { mapWInToColor, PATH, winFunc } from \"../utils\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nconst ContentCard = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Head = styled.h2`\r\n  letter-spacing: 4px;\r\n  padding-bottom: 23px;\r\n  padding-top: 10px;\r\n  text-align: center;\r\n  font-weight: 600;\r\n`;\r\nconst Card = styled.div`\r\n  padding: 40px;\r\n  background: white;\r\n  text-align: center;\r\n  font-size: 20px;\r\n  max-width: 800px;\r\n  box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.65);\r\n`;\r\n\r\nconst Table = styled(\"table\")`\r\n  background: white;\r\n  max-width: 800px;\r\n  box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.65);\r\n  &&& {\r\n    th,\r\n    td,\r\n    tr {\r\n      width: 40%;\r\n      padding: 15px;\r\n      text-align: center;\r\n      padding: 20px;\r\n    }\r\n    th {\r\n      border-bottom: 1px solid black;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Td = styled(\"table\")<{ type: any }>`\r\n  font-weight: 700;\r\n  letter-spacing: 1.5px;\r\n  word-spacing: 2px;\r\n  width: 100%;\r\n  padding: 15px;\r\n  text-align: center;\r\n  color: ${(props) => mapWInToColor(props.type)};\r\n`;\r\n\r\nconst Button = styled(\"button\")`\r\n  cursor: pointer;\r\n  background-color: palevioletred;\r\n  font-size: 13px;\r\n  border-radius: 3px;\r\n  color: white;\r\n  width: 60px;\r\n  border: 2px solid palevioletred;\r\n  padding: 5px;\r\n  transition: 0.5s all ease-out;\r\n  box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.65);\r\n\r\n  &:hover {\r\n    color: palevioletred;\r\n    background: transparent;\r\n  }\r\n`;\r\n\r\nconst MyGames = () => {\r\n  const history = useHistory();\r\n\r\n  const id: number = Number(localStorage.getItem(\"user_id\"));\r\n\r\n  const { loading, error, data } = useQuery(GET_GAMES, {\r\n    variables: {\r\n      id,\r\n    },\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n  if (error) {\r\n    return <div>Error!</div>;\r\n  }\r\n\r\n  return (\r\n    <ContentCard>\r\n      <Head>My Games</Head>\r\n      {data.user_by_pk.games.length > 0 ? (\r\n        <Table style={{ width: \"100%\" }}>\r\n          <thead>\r\n            <tr>\r\n              <th>Opponent</th>\r\n              <th>Status</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {data.user_by_pk.games.map((item: any) => (\r\n              <tr key={item.id}>\r\n                <td>{item.userByUserId2.username}</td>\r\n                <Td\r\n                  type={\r\n                    item.move_1 && item.move_2\r\n                      ? winFunc(item.move_1, item.move_2)\r\n                      : \"Incomplete\"\r\n                  }\r\n                >\r\n                  {item.move_1 && item.move_2\r\n                    ? winFunc(item.move_1, item.move_2)\r\n                    : \"Incomplete\"}\r\n                </Td>\r\n                <td>\r\n                  <Button\r\n                    onClick={() => history.push(`${PATH}/game/${item.id}`)}\r\n                  >\r\n                    Details\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      ) : (\r\n        <Card>You have not challenged anyone yet.</Card>\r\n      )}\r\n      <br />\r\n      <Head>Challenges</Head>\r\n      {data.user_by_pk.gamesByUserId2.length > 0 ? (\r\n        <Table style={{ width: \"100%\" }}>\r\n          <thead>\r\n            <tr>\r\n              <th>Opponent</th>\r\n              <th>Status</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {data.user_by_pk.gamesByUserId2.map((item: any) => (\r\n              <tr key={item.id}>\r\n                <td>{item.user.username}</td>\r\n                <Td\r\n                  type={\r\n                    item.move_1 && item.move_2\r\n                      ? winFunc(item.move_2, item.move_1)\r\n                      : \"Incomplete\"\r\n                  }\r\n                >\r\n                  {item.move_1 && item.move_2\r\n                    ? winFunc(item.move_2, item.move_1)\r\n                    : \"Incomplete\"}\r\n                </Td>\r\n                <td>\r\n                  <Button\r\n                    onClick={() => history.push(`${PATH}/game/${item.id}`)}\r\n                  >\r\n                    Details\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      ) : (\r\n        <Card>No Challenges yet.</Card>\r\n      )}\r\n    </ContentCard>\r\n  );\r\n};\r\n\r\nexport default MyGames;\r\n","import { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport styled from \"styled-components\";\r\nimport { logout, PATH } from \"../utils\";\r\n\r\nconst Content = styled.div`\r\n  margin: 0 8%;\r\n  padding-bottom: 40px;\r\n`;\r\nconst Header = styled.div`\r\n  border-bottom: 1px solid #e2e8f0;\r\n`;\r\nconst Nav = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n  padding: 1rem 5%;\r\n  background: #973050;\r\n  padding-bottom: 0;\r\n  box-shadow: 1px 2px 1px rgba(0, 0, 0, 0.65);\r\n  @media screen and (max-width: 800px) {\r\n    display: block;\r\n    padding-bottom: 20px;\r\n  }\r\n`;\r\n\r\nconst NavMenu = styled(\"div\")<{ isClicked?: any }>`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n  @media screen and (max-width: 800px) {\r\n    ${(props) =>\r\n      props.isClicked\r\n        ? `\r\n    display: block;\r\n    `\r\n        : `\r\n    display: none;\r\n    `}\r\n  }\r\n`;\r\n\r\nconst NavItem = styled(\"span\")<{ isClicked?: any }>`\r\n  margin-left: 5rem;\r\n  list-style: none;\r\n  @media screen and (max-width: 800px) {\r\n    ${(props) =>\r\n      props.isClicked\r\n        ? `\r\n    display: block;\r\n    margin: 30px 10px;\r\n    `\r\n        : `\r\n    display: none;\r\n    `}\r\n  }\r\n`;\r\n\r\nconst NavLink = styled(Link)`\r\n  font-size: 25px;\r\n  font-weight: 400;\r\n  color: white;\r\n  text-decoration: none;\r\n  &:hover {\r\n    color: black;\r\n  }\r\n`;\r\n\r\nconst NavLogo = styled(Link)`\r\n  font-size: 25px;\r\n  font-weight: 500;\r\n  color: white;\r\n  text-decoration: none;\r\n  margin-bottom: 20px;\r\n`;\r\nconst Button = styled(\"button\")<{ isClicked?: boolean }>`\r\n  cursor: pointer;\r\n  font-size: 16px;\r\n  border-radius: 3px;\r\n  border: 2px solid #db7093;\r\n  padding: 8px 1em;\r\n  transition: 0.5s all ease-out;\r\n  color: #db7093;\r\n  background: white;\r\n  &:hover {\r\n    background-color: #db7093;\r\n    color: white;\r\n  }\r\n`;\r\n\r\nconst NavIcon = styled(\"i\")`\r\n  display: none;\r\n  @media screen and (max-width: 800px) {\r\n    display: block;\r\n    position: absolute;\r\n    right: 0;\r\n    top: 0;\r\n    font-size: 40px;\r\n    margin: 15px;\r\n    color: white;\r\n  }\r\n`;\r\n\r\nconst Navbar = ({ children }: any) => {\r\n  const [isClicked, setClicked] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <Header>\r\n        <Nav>\r\n          <NavLogo to=\"/\">Rock-Paper-Scissors</NavLogo>\r\n          <NavMenu isClicked={isClicked}>\r\n            <NavItem isClicked={isClicked}>\r\n              <NavLink to={`${PATH}/my-games`}>History</NavLink>\r\n            </NavItem>\r\n            <NavItem isClicked={isClicked}>\r\n              <NavLink to={`${PATH}/invites`}>Invites</NavLink>\r\n            </NavItem>\r\n            <NavItem isClicked={isClicked}>\r\n              <Button onClick={() => logout()}>Log Out</Button>\r\n            </NavItem>\r\n          </NavMenu>\r\n          <NavIcon\r\n            onClick={() => setClicked(!isClicked)}\r\n            className=\"fa fa-bars\"\r\n          ></NavIcon>\r\n        </Nav>\r\n      </Header>\r\n      <Content>{children}</Content>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import { useQuery } from \"@apollo/client\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { GET_USER_GAMES } from \"../gql/queries\";\r\n\r\nimport styled from \"styled-components\";\r\nimport { PATH } from \"../utils\";\r\n\r\nconst ContentCard = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Head = styled.h2`\r\n  letter-spacing: 4px;\r\n  padding-bottom: 23px;\r\n  padding-top: 10px;\r\n  text-align: center;\r\n  font-weight: 600;\r\n`;\r\nconst Card = styled.div`\r\n  padding: 40px;\r\n  background: white;\r\n  text-align: center;\r\n  font-size: 20px;\r\n  max-width: 800px;\r\n  box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.65);\r\n`;\r\n\r\nconst Table = styled(\"table\")`\r\n  background: white;\r\n  max-width: 800px;\r\n  box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.65);\r\n  &&& {\r\n    th,\r\n    td,\r\n    tr {\r\n      width: 50%;\r\n      padding: 15px;\r\n      text-align: center;\r\n    }\r\n    th {\r\n      border-bottom: 1px solid black;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Button = styled(\"button\")<{ primary?: boolean }>`\r\n  cursor: pointer;\r\n  background-color: ${(props) => (props.primary ? \"#1e88e5\" : \"palevioletred\")};\r\n  font-size: 16px;\r\n  border-radius: 3px;\r\n  color: white;\r\n  width: 80px;\r\n  border: 2px solid palevioletred;\r\n  padding: 5px 8px;\r\n  transition: 0.5s all ease-out;\r\n  margin: 20px 0;\r\n  border-radius: 3%;\r\n  box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.65);\r\n\r\n  &:hover {\r\n    color: palevioletred;\r\n    background: transparent;\r\n  }\r\n`;\r\n\r\nconst Invites = () => {\r\n  const history = useHistory();\r\n\r\n  const id: number = Number(localStorage.getItem(\"user_id\"));\r\n\r\n  const { loading, error, data } = useQuery(GET_USER_GAMES, {\r\n    variables: {\r\n      id,\r\n    },\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n  if (error) {\r\n    return <div>Error!</div>;\r\n  }\r\n\r\n  return (\r\n    <ContentCard>\r\n      <Head>Games</Head>\r\n      {data.game.length > 0 ? (\r\n        <Table style={{ width: \"100%\" }}>\r\n          <thead>\r\n            <tr>\r\n              <th>Opponent</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {data.game.map((item: any) => (\r\n              <tr key={item.id}>\r\n                <td>{item.user.username}</td>\r\n                <td>\r\n                  <Button\r\n                    onClick={() => history.push(`${PATH}/game/${item.id}`)}\r\n                  >\r\n                    Play\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      ) : (\r\n        <Card>No invites yet.</Card>\r\n      )}\r\n    </ContentCard>\r\n  );\r\n};\r\n\r\nexport default Invites;\r\n","import React from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport Users from \"./Users\";\r\nimport UserSignUp from \"./UserSignUp\";\r\nimport Game from \"./Game\";\r\nimport MyGames from \"./MyGames\";\r\nimport Navbar from \"./Navbar\";\r\nimport Invites from \"./Invites\";\r\nimport { PATH } from \"../utils\";\r\n\r\nconst Routes = () => {\r\n  const RedirectToLogin = ({ component: Component, ...rest }: any) => {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={(props) =>\r\n          localStorage.getItem(\"auth_token\") ? (\r\n            <Navbar>\r\n              <Component {...props} />\r\n            </Navbar>\r\n          ) : (\r\n            <Redirect to={`${PATH}/sign-in`} />\r\n          )\r\n        }\r\n      />\r\n    );\r\n  };\r\n\r\n  const RedirectToHome = ({ component: Component, ...rest }: any) => {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={(props) =>\r\n          localStorage.getItem(\"auth_token\") ? (\r\n            <Redirect to={PATH} />\r\n          ) : (\r\n            <Component {...props} />\r\n          )\r\n        }\r\n      />\r\n    );\r\n  };\r\n  return (\r\n    <Switch>\r\n      <RedirectToLogin exact PATH={PATH} component={Users} />\r\n      <RedirectToHome exact PATH={`${PATH}/sign-in\"`} component={UserSignUp} />\r\n      <RedirectToLogin PATH={`${PATH}/my-games`} component={MyGames} />\r\n      <RedirectToLogin PATH={`${PATH}/invites`} component={Invites} />\r\n      <RedirectToLogin PATH={`${PATH}/game/:id`} component={Game} />\r\n      <Redirect to={PATH} />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import Routes from \"./components/Routes\";\r\n\r\nconst App = () => {\r\n  return (\r\n      <Routes />\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { ApolloClient, ApolloProvider, InMemoryCache } from \"@apollo/client\";\r\nimport { WebSocketLink } from \"apollo-link-ws\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nrequire('dotenv').config()\r\n\r\nconst url: any = process.env.REACT_APP_URL;\r\n\r\nconst getToken = () => localStorage.getItem('auth_token')\r\n\r\nconst webLink: any = new WebSocketLink({\r\n  uri: `wss://${url}`,\r\n  options: {\r\n    reconnect: true,\r\n    connectionParams: {\r\n      headers: getToken()? {\r\n         Authorization: `Bearer ${getToken()}`,\r\n      }\r\n      : {\r\n        \"x-hasura-role\": \"anonymous\"\r\n      }\r\n    }\r\n  },\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  link: webLink,\r\n  cache: new InMemoryCache(),\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <ApolloProvider client={client}>\r\n        <App />\r\n      </ApolloProvider>\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}